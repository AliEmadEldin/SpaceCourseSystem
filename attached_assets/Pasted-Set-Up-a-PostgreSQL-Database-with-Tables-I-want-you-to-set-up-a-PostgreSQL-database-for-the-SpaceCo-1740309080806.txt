Set Up a PostgreSQL Database with Tables
"I want you to set up a PostgreSQL database for the SpaceCourse project using a Replit-compatible service like Supabase or a Replit database secret. First, install the pg package in the backend directory by running npm install pg from spacecourse/backend. Create a new file spacecourse/backend/db.js to configure the PostgreSQL connection using the pg packageâ€™s Pool class. In db.js, write this code: const { Pool } = require('pg'); const pool = new Pool({ connectionString: process.env.DATABASE_URL, ssl: { rejectUnauthorized: false } }); module.exports = pool;. Add a .env file in spacecourse/backend with the line DATABASE_URL=your_postgresql_connection_string (replace your_postgresql_connection_string with a real PostgreSQL URL from Supabase or another provider). Next, create a file spacecourse/backend/init-db.js to define and initialize five tables in the PostgreSQL database. In init-db.js, write code to connect to the database using the pool from db.js and run these SQL commands:

CREATE TABLE IF NOT EXISTS users (id SERIAL PRIMARY KEY, email VARCHAR(255) UNIQUE NOT NULL, password VARCHAR(255) NOT NULL, role VARCHAR(50) NOT NULL);
CREATE TABLE IF NOT EXISTS courses (id SERIAL PRIMARY KEY, title VARCHAR(255) NOT NULL, description TEXT, instructor_id INTEGER REFERENCES users(id), price DECIMAL(10,2));
CREATE TABLE IF NOT EXISTS enrollments (id SERIAL PRIMARY KEY, user_id INTEGER REFERENCES users(id), course_id INTEGER REFERENCES courses(id), enrollment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE IF NOT EXISTS live_sessions (id SERIAL PRIMARY KEY, course_id INTEGER REFERENCES courses(id), title VARCHAR(255), start_time TIMESTAMP, zoom_link VARCHAR(255));
CREATE TABLE IF NOT EXISTS content (id SERIAL PRIMARY KEY, course_id INTEGER REFERENCES courses(id), type VARCHAR(50), url VARCHAR(255)); Run the script once with node init-db.js from spacecourse/backend to create the tables, and log 'Database tables created' to the console if successful."